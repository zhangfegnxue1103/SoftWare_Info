# ** EXAM OBJECTIVE: CLUSTER ADMINISTRATION **
考试目的：
# GOAL: Backup and cross-cluster search
目标：
# REQUIRED SETUP: /
安装需求：
Let’s create a one-node cluster and index some data in it.
# Download the exam version of Elasticsearch
下载elasticsearch
# Deploy the cluster `eoc-06-original-cluster`, with one node named 
#    `node-1`
部署集群
# Start the cluster
启动集群
# Create the index `hamlet` and add some documents by running the 
#    following _bulk command
使用bulk命令创建索引hamlet并添加一下文档到索引中
  
PUT hamlet/_bulk
{"index":{"_index":"hamlet","_id":0}}
{"line_number":"1","speaker":"BERNARDO","text_entry":"Whos there?"}
{"index":{"_index":"hamlet","_id":1}}
{"line_number":"2","speaker":"FRANCISCO","text_entry":"Nay, answer me: stand, and unfold yourself."}
{"index":{"_index":"hamlet","_id":2}}
{"line_number":"3","speaker":"BERNARDO","text_entry":"Long live the king!"}
{"index":{"_index":"hamlet","_id":3}}
{"line_number":"4","speaker":"FRANCISCO","text_entry":"Bernardo?"}
{"index":{"_index":"hamlet","_id":4}}
{"line_number":"5","speaker":"BERNARDO","text_entry":"He."}

DELETE hamlet
PUT hamlet/_doc/1
{"line_number":"1","speaker":"BERNARDO","text_entry":"Whos there?"}
PUT hamlet/_doc/2
{"line_number":"2","speaker":"FRANCISCO","text_entry":"Nay, answer me: stand, and unfold yourself."}


# Configure `node-1` to support a shared file system repository for backups located in
配置node-1支持共享文件系统库，备份路径位于：
#    (i)  "[home_folder]/repo" and
#    (ii) "[home_folder]/elastic/repo" - e.g., "glc/elastic/repo"

# Create the `hamlet_backup` shared file system repository in 
# "[home_folder]/elastic/repo"
创建hamlet-1共享文件系统库在/home/elasticsearch/elasticsearch-7.2/elastic/repo目录下

PUT /_snapshot/hamlet_backup
{
  "type": "fs",
  "settings": {
    "location": "/home/elasticsearch/elasticsearch-7.2.0/elastic/repo"
  }
}
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/modules-snapshots.html

# Create a snapshot of the `hamlet` index, so that the snapshot
创建一个hamlet索引的快照，快照需求如下：
#    (i)  is named `hamlet_snapshot_1`,
			快照名称
#    (ii) is stored into `hamlet_backup` 
			存储位置


PUT /_snapshot/hamlet_backup/hamlet_snapshot_1?wait_for_completion=true
{
  "indices": "hamlet",
  "ignore_unavailable": true,
  "include_global_state": false
}

# Delete the index `hamlet`

DELETE hamlet

# Restore the index `hamlet` using `hamlet_snapshot_1`
使用hamlet_snapshot_1来恢复索引hamlet

POST /_snapshot/hamlet_backup/hamlet_snapshot_1/_restore

GET hamlet/_search


# Deploy a second cluster `eoc-06-adaptation-cluster`, with one node 
#    named `node-2`
部署第二个集群，节点名称node-2
# Start the cluster
启动集群
# Create the index `hamlet-pirate` on `node-2` and add documents 
#    using the _bulk command
创建索引hamlet-priate到node2节点上，使用bulk命令添加一下文档

GET _cat/health?v
DELETE .kibana
GET _cluster/allocation/explain

PUT /*/_settings
{
  "number_of_replicas": 0
}

DELETE task2

PUT hamlet-pirate/_bulk
{"index":{"_index":"hamlet-pirate","_id":5}}
{"line_number":"6","speaker":"FRANCISCO","text_entry":"Ahoy Matey! Ye come most carefully upon yer hour."}
{"index":{"_index":"hamlet-pirate","_id":6}}
{"line_number":"7","speaker":"BERNARDO","text_entry":"Aye! Tis now struck twelve; get ye to bed, Francisco."}
{"index":{"_index":"hamlet-pirate","_id":7}}
{"line_number":"8","speaker":"FRANCISCO","text_entry":"For this relief much thanks, son of a biscuit eater"}
{"index":{"_index":"hamlet-pirate","_id":8}}
{"line_number":"9","speaker":"BERNARDO","text_entry":"Arrrrrrrrh!"}



# Enable cross cluster search on `eoc-06-adaptation-cluster`, so that
# 在eoc-06-adaptation-cluster使用跨集群搜索，需求如下：
#    (i)   the name of the remote cluster is `original`,
			远程集群名称original
#    (ii)  the seed is `node-1`, which is listening on the default 
#          transport port,
			节点名称node-1，监听默认传输端口
#    (iii) the cross cluster configuration persists across multiple 
#          restarts 
			跨集群配置在多次重启后依然生效
# Run the cross-cluster query below to check your setup 
运行跨集群请求检查配置生效
# eoc-06-adaptation-cluster node
PUT _cluster/settings
{
  "persistent": {
    "cluster": {
      "remote": {
        "external": {
          "seeds": [
            "172.17.0.17:9301"
          ]
        }
      }
    }
  }
}

#external
PUT _cluster/settings
{
  "persistent": {
    "cluster": {
      "remote": {
        "internal": {
          "seeds": [
            "172.17.0.17:9300"
          ]
        }
      }
    }
  }
}


  
GET /external:hamlet,hamlet-pirate/_search
{
  "query": {
    "match": {
       "speaker": "BERNARDO"
    }
  }
}